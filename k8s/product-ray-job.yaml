apiVersion: batch/v1
kind: Job
metadata:
  name: product-ray-job
  namespace: yek-ray
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: product-ray
          image: koreantiger/ray-scrapy:latest
          imagePullPolicy: Always
          command: ["python", "./oliveyoung/spiders/product_no_ray.py"]
          env:
            - name: MONGO_URI
              value: "mongodb://mongodb-service:27017"
            - name: CLUSTER_DOMAIN
              value: "ops.openark"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: HEAD_SERVICE_NAME
              value: "raycluster-complete-head-svc"
            - name: RAY_ADDRESS
              value: "ray://raycluster-complete-head-svc:8265"


# rayClusterSpec:
#     rayVersion: '2.9.0' # should match the Ray version in the image of the containers
#     # Ray head pod template
#     headGroupSpec:
#       # The `rayStartParams` are used to configure the `ray start` command.
#       # See https://github.com/ray-project/kuberay/blob/master/docs/guidance/rayStartParams.md for the default settings of `rayStartParams` in KubeRay.
#       # See https://docs.ray.io/en/latest/cluster/cli.html#ray-start for all available options in `rayStartParams`.
#       rayStartParams:
#         dashboard-host: '0.0.0.0'
#       #pod template
#       template:
#         spec:
#           containers:
#             - name: ray-head
#               image: rayproject/ray:2.9.0
#               ports:
#                 - containerPort: 6379
#                   name: gcs-server
#                 - containerPort: 8265 # Ray dashboard
#                   name: dashboard
#                 - containerPort: 10001
#                   name: client
#               resources:
#                 limits:
#                   cpu: "1"
#                 requests:
#                   cpu: "200m"
#               volumeMounts:
#                 - mountPath: /home/ray/samples
#                   name: code-sample
#           volumes:
#             # You set volumes at the Pod level, then mount them into containers inside that Pod
#             - name: code-sample
#               configMap:
#                 # Provide the name of the ConfigMap you want to mount.
#                 name: ray-job-code-sample
#                 # An array of keys from the ConfigMap to create as files
#                 items:
#                   - key: sample_code.py
#                     path: sample_code.py
#     workerGroupSpecs:
#       # the pod replicas in this group typed worker
#       - replicas: 1
#         minReplicas: 1
#         maxReplicas: 5
#         # logical group name, for this called small-group, also can be functional
#         groupName: small-group
#         # The `rayStartParams` are used to configure the `ray start` command.
#         # See https://github.com/ray-project/kuberay/blob/master/docs/guidance/rayStartParams.md for the default settings of `rayStartParams` in KubeRay.
#         # See https://docs.ray.io/en/latest/cluster/cli.html#ray-start for all available options in `rayStartParams`.
#         rayStartParams: {}
#         #pod template
#         template:
#           spec:
#             containers:
#               - name: ray-worker # must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc'
#                 image: rayproject/ray:2.9.0
#                 lifecycle:
#                   preStop:
#                     exec:
#                       command: [ "/bin/sh","-c","ray stop" ]
#                 resources:
#                   limits:
#                     cpu: "1"
#                   requests:
#                     cpu: "200m"